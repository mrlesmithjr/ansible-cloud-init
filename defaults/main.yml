---
# defaults file for ansible-cloud-init

# Defines if cloud-init should be cleaned
cloud_init_clean: false

# Defines if cloud-init is configured
cloud_init_config: false

# Defines the cloud-init configuration which is converted to YAML via template
cloud_init_configuration:
  # Add groups to the system
  # The following example adds the ubuntu group with members 'root' and 'sys'
  # and the empty group cloud-users.
  groups:
    []
    # - cloud-users

  # A set of users which may be applied and/or used by various modules
  # when a 'default' entry is found it will reference the 'default_user'
  # from the distro configuration specified below
  users:
    []
    # - default
    # - name:             ubuntu
    #   lock_passwd:      true
    #   gecos:            Ubuntu
    #   groups:
    #     - adm
    #     - audio
    #     - cdrom
    #     - dialout
    #     - dip
    #     - floppy
    #     - lxd
    #     - netdev
    #     - plugdev
    #     - sudo
    #     - video
    #   sudo:             "ALL=(ALL) NOPASSWD:ALL"
    #   shell:            /bin/bash
    #   ssh_authorized_keys: []

  # If this is set, 'root' will not be able to ssh in and they
  # will get a message to login instead as the default $user
  # disable_root:         true

  # This will cause the set+update hostname module to not operate (if true)
  # preserve_hostname:    false

  datasource_list:
    # - Azure
    # - CloudStack
    # - DigitalOcean
    # - Ec2
    # - MAAS
    - None
    # - OpenStack

  datasource:
    []
    # Ec2:
    #   metadata_urls:    [ 'blah.com' ]
    #   timeout:          5 # (defaults to 50 seconds)
    #   max_wait:         10 # (defaults to 120 seconds)
    # OpenStack:
    #   metadata_urls:    ["http://169.254.169.254"]
    #   max_wait:         -1
    #   timeout:          10
    #   retries:          5

  # The modules that run in the 'init' stage
  cloud_init_modules:
    - migrator
    - seed_random
    - bootcmd
    - write-files
    - growpart
    - resizefs
    - disk_setup
    - mounts
    - set_hostname
    - update_hostname
    - update_etc_hosts
    - ca-certs
    - rsyslog
    - users-groups
    - ssh

  # The modules that run in the 'config' stage
  cloud_config_modules:
    # Emit the cloud config ready event
    # this can be used by upstart jobs for 'start on cloud-config'.
    - emit_upstart
    - snap_config
    - ssh-import-id
    - locale
    - set-passwords
    - grub-dpkg
    - apt-pipelining
    - apt-configure
    - ntp
    - timezone
    - disable-ec2-metadata
    - runcmd
    - byobu

  # The modules that run in the 'final' stage
  cloud_final_modules:
    - snappy
    - package-update-upgrade-install
    - fan
    - landscape
    - lxd
    - puppet
    - chef
    - salt-minion
    - mcollective
    - rightscale_userdata
    - scripts-vendor
    - scripts-per-once
    - scripts-per-boot
    - scripts-per-instance
    - scripts-user
    - ssh-authkey-fingerprints
    - keys-to-console
    - phone-home
    - final-message
    - power-state-change

  # manage_etc_hosts:     false

  # manage_resolv_conf:   false

  packages:
    []
    # - build-essential
    # - python-minimal
    # - libffi-dev
    # - libssl-dev
    # - python-dev
    # - python-pip
    # - python-setuptools
  # resolv_conf:
  #   nameservers:
  #     - 8.8.4.4
  #     - 8.8.8.8
  #   searchdomains:
  #     - foo.example.com
  #     - bar.example.com
  #   domain:             example.com
  #   options:
  #     rotate:           true
  #     timeout:          1
